import { Menu } from "@grammyjs/menu";
import { getMotoTuning } from "../services/getMotoTuning.js";
// –ú–∞—Å—Å–∏–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–∫–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ category ‚Äî –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º),
// label (–æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –Ω–∞ –∫–Ω–æ–ø–∫–µ) ‚Äî –Ω–∞ —Ä—É—Å—Å–∫–æ–º
const tuningCategories = [
    {
        label: "üñå –ö–∞—Å—Ç–æ–º–Ω–∞—è –ø–æ–∫—Ä–∞—Å–∫–∞ –∏ –∞—ç—Ä–æ–≥—Ä–∞—Ñ–∏—è",
        category: "custom_painting"
    },
    {
        label: "üí° –¢—é–Ω–∏–Ω–≥ –æ–ø—Ç–∏–∫–∏ –∏ –æ—Å–≤–µ—â–µ–Ω–∏—è",
        category: "lighting"
    },
    {
        label: "üîä –í—ã—Ö–ª–æ–ø–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã",
        category: "exhaust_systems"
    },
    {
        label: "‚öôÔ∏è –£—Å–∏–ª–µ–Ω–∏–µ –¥–≤–∏–≥–∞—Ç–µ–ª—è –∏ –ø—Ä–æ—à–∏–≤–∫–∞ –≠–ë–£",
        category: "engine_upgrade"
    },
    {
        label: "üõû –ü–æ–¥–≤–µ—Å–∫–∞ –∏ —Ç–æ—Ä–º–æ–∑–∞",
        category: "suspension_and_brakes"
    },
    {
        label: "üîå –≠–ª–µ–∫—Ç—Ä–∏–∫–∞ –∏ –ø—Ä–∏–±–æ—Ä–Ω–∞—è –ø–∞–Ω–µ–ª—å (—à–∫–∞–ª—ã)",
        category: "electronics"
    },
    {
        label: "ü™ë –°–∏–¥–µ–Ω—å–µ –∏ —ç—Ä–≥–æ–Ω–æ–º–∏–∫–∞",
        category: "seat_and_ergonomics"
    },
    {
        label: "üé® –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –Ω–∞–∫–ª–µ–π–∫–∏",
        category: "decor"
    },
    {
        label: "üî© –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –∏ –±–∞–≥–∞–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã",
        category: "accessories"
    },
    {
        label: "üî• –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –∫–∞—Å—Ç–æ–º-–ø—Ä–æ–µ–∫—Ç—ã",
        category: "exclusive_projects"
    }
];
// –°–æ–∑–¥–∞—ë–º –º–µ–Ω—é "tuningMenu"
export const tuningMenu = new Menu("tuning-menu");
// –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –º–∞—Å—Å–∏–≤—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –¥–ª—è –∫–∞–∂–¥–æ–π –¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É
tuningCategories.forEach((item) => {
    tuningMenu
        .text(item.label, async (ctx) => {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏
            const services = await getMotoTuning();
            // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –Ω—É–∂–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º)
            const filteredServices = services.filter((service) => service.category === item.category);
            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤—ã–≤–æ–¥–∞
            const servicesList = filteredServices.length
                ? filteredServices
                    .map((service) => `
<b>${service.name}</b>
üìç <i>${service.address || "–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω"}</i>
üîó <a href="${service.link}">–ü–µ—Ä–µ–π—Ç–∏</a>
${service.note ? `üí° <i>${service.note}</i>` : ""}`)
                    .join("\n\n")
                : `–£—Å–ª—É–≥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ¬´${item.label}¬ª –ø–æ–∫–∞ –Ω–µ—Ç üòî`;
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (HTML –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é)
            await ctx.reply(servicesList, {
                parse_mode: "HTML",
                link_preview_options: { is_disabled: true }
            });
        }
        catch (error) {
            await ctx.reply(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞: ${error.message}`, {
                parse_mode: "HTML",
                link_preview_options: { is_disabled: true }
            });
        }
        finally {
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–µ–Ω—é (–≤–æ–∑–≤—Ä–∞—Ç –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ)
            await ctx.menu.close();
        }
    })
        .row(); // –ö–∞–∂–¥—É—é –∫–Ω–æ–ø–∫—É –≤—ã–≤–æ–¥–∏–º –≤ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ (–º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫—É)
});
tuningMenu.back("–ù–∞–∑–∞–¥");
